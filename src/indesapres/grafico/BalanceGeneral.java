/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package indesapres.grafico;

import indesapres.logica.ServiciosDB;
import indesapres.modelos.Deducciones;
import indesapres.modelos.Prestamos;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.xwpf.usermodel.ParagraphAlignment;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
import org.apache.poi.xwpf.usermodel.XWPFRun;
import org.apache.poi.xwpf.usermodel.XWPFTable;
import org.apache.poi.xwpf.usermodel.XWPFTableRow;

/**
 *
 * @author Oscar Mendez
 */
public final class BalanceGeneral extends javax.swing.JFrame {

    /**
     * Creates new form BalanceGeneral
     */
    public BalanceGeneral() {
        initComponents();
        ServiciosDB service = new ServiciosDB();
        service.abrirConexion();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jAñio = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jMes = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel1.setText("BALANCE GENERAL");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Prestamos", "Capital + interes", "Deducciones", "Abono Capital", "Interes ganado", "Gastos Pap."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setFont(new java.awt.Font("Consolas", 0, 11)); // NOI18N
        jButton1.setText("Generar Documento");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Consolas", 0, 11)); // NOI18N
        jButton2.setText("General");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel5.setText("Ver por mes");

        jLabel7.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel7.setText("Año");

        jAñio.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        jAñio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAñioActionPerformed(evt);
            }
        });
        jAñio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jAñioKeyPressed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Consolas", 0, 11)); // NOI18N
        jButton3.setText("Mostrar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jMes.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        jMes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Novienbre", "Diciembre", " " }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 789, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(21, 21, 21)
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jAñio, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(70, 70, 70)
                                        .addComponent(jButton3)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jAñio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3)
                    .addComponent(jMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        crearTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        setearinformacion();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        filterDate();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jAñioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jAñioKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jAñioKeyPressed

    private void jAñioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAñioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jAñioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BalanceGeneral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BalanceGeneral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BalanceGeneral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BalanceGeneral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new BalanceGeneral().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jAñio;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JComboBox<String> jMes;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    public void setearinformacion() {
        try {
            ServiciosDB service = new ServiciosDB();
            Prestamos pres;
            float Capitalex = (float) 42138.75;
            float Interesex = (float) 7584.97;
            float sumaPrestamos = (float) 0.0;
            float sumaDeducciones = (float) 0.0;
            float sumaCapital = (float) 0.0;
            float sumaCapitalded = (float) 0.0;
            float sumaInteresded = (float) 0.0;
            Deducciones ded;
            ArrayList<Prestamos> depts;
            depts = (ArrayList<Prestamos>) service.findAllPrestamos();
            ArrayList<Deducciones> deptsd;
            deptsd = (ArrayList<Deducciones>) service.findAllDeducciones();
            for (int x = 0; x < depts.size(); x++) {

                float prestamos = depts.get(x).getPrestamos();
                float capital = depts.get(x).getCapitalinteres();
                sumaPrestamos = sumaPrestamos + prestamos;
                sumaCapital = sumaCapital + capital;
            }
            int gastospap = (depts.size()) * 25;
            for (int x = 0; x < deptsd.size(); x++) {
                float deducciones = deptsd.get(x).getDeduccion();
                sumaDeducciones = sumaDeducciones + deducciones;
                String idPrestamo = deptsd.get(x).getIdPrestamo();
                pres = service.findByIdPrestamos(idPrestamo);
                float capitalded = pres.getAbonocapital();
                float interesded = pres.getInteresganado();
                sumaCapitalded = sumaCapitalded + capitalded;
                sumaInteresded = sumaInteresded + interesded;
            }
            jTable1.setValueAt(formatNumber(sumaPrestamos), 0, 0);
            jTable1.setValueAt(formatNumber(sumaDeducciones), 0, 2);
            jTable1.setValueAt(formatNumber(sumaCapital), 0, 1);
            jTable1.setValueAt(formatNumber(sumaCapitalded + Capitalex), 0, 3);
            jTable1.setValueAt(formatNumber(sumaInteresded + Interesex), 0, 4);
            jTable1.setValueAt(formatNumber(gastospap), 0, 5);

        } catch (SQLException ex) {
            Logger.getLogger(BalanceGeneral.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void agregarFilas() {
        DefaultTableModel temp = (DefaultTableModel) jTable1.getModel();
        Object nuevo[] = {0, 0.0, 0.0, 0.0, 0.0};
        temp.addRow(nuevo);
    }

    public void crearTable() {
        FileOutputStream outStream = null;
        try {
            Date date = new Date();
            SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
            String path = "C:\\Users\\Oscar Mendez\\Documents\\INDESAPRES\\Prestamos\\template.docx";
            XWPFDocument document = new XWPFDocument(new FileInputStream(new File(path)));
            String parrafo1 = "Balance General a la Fecha " + format.format(date);

            XWPFParagraph paragraph1 = document.createParagraph();
            XWPFRun run1 = paragraph1.createRun();
            run1.setFontSize(12);
            run1.setFontFamily("Calibri");
            run1.setText(parrafo1);
            paragraph1.setAlignment(ParagraphAlignment.LEFT);

            XWPFTable tableOne = document.createTable();
            XWPFTableRow tableOneRowOne = tableOne.getRow(0);
            tableOneRowOne.getCell(0).setText("Prestamos");
            tableOneRowOne.addNewTableCell().setText("Capital + interes");
            tableOneRowOne.addNewTableCell().setText("Recuperado");
            tableOneRowOne.addNewTableCell().setText("Abono Capital");
            tableOneRowOne.addNewTableCell().setText("Interes Ganado");
            tableOneRowOne.addNewTableCell().setText("Gastos Pap.");
            XWPFTableRow tableRow1 = tableOne.createRow();
            String prestamo = String.valueOf(jTable1.getValueAt(0, 0));
            String capitalinteres = String.valueOf(jTable1.getValueAt(0, 1));
            String deducciones = String.valueOf(jTable1.getValueAt(0, 2));
            String capital = String.valueOf(jTable1.getValueAt(0, 3));
            String interes = String.valueOf(jTable1.getValueAt(0, 4));
            String gastospap = String.valueOf(jTable1.getValueAt(0, 5));
            tableRow1.getCell(0).setText(prestamo);
            tableRow1.getCell(1).setText(capitalinteres);
            tableRow1.getCell(2).setText(deducciones);
            tableRow1.getCell(3).setText(capital);
            tableRow1.getCell(4).setText(interes);
            tableRow1.getCell(5).setText(gastospap);
            outStream = new FileOutputStream("C:\\Users\\Oscar Mendez\\Documents\\INDESAPRES\\Documentos Indesa\\Balance General.docx");
            document.write(outStream);
            outStream.close();
            JOptionPane.showMessageDialog(null, "ARCHIVO CREADO CON EXITO!");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(BalanceGeneral.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(BalanceGeneral.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public String formatNumber(float cantidad) {
        String res;
        DecimalFormat formateador = new DecimalFormat("###,###.##");
        res = formateador.format(cantidad);
        return res;
    }

    public void filterDate() {
        try {
            ServiciosDB service = new ServiciosDB();
            Prestamos pres;
            float Capitalex = (float) 42138.75;
            float Interesex = (float) 7584.97;
            float sumaPrestamos = (float) 0.0;
            float sumaDeducciones = (float) 0.0;
            float sumaCapital = (float) 0.0;
            float sumaCapitalded = (float) 0.0;
            float sumaInteresded = (float) 0.0;
            Deducciones ded;
            ArrayList<Prestamos> depts;
            depts = (ArrayList<Prestamos>) service.findAllPrestamos();
            ArrayList<Deducciones> deptsd;
            deptsd = (ArrayList<Deducciones>) service.findAllDeducciones();
            for (int x = 0; x < depts.size(); x++) {
                pres = depts.get(x);
                if (obtenerMes(pres.getFecha()).equals(jMes.getSelectedItem().toString()) && obtenerAnio(pres.getFecha()) == Integer.parseInt(jAñio.getText())) {
                    float prestamos = depts.get(x).getPrestamos();
                    float capital = depts.get(x).getCapitalinteres();
                    sumaPrestamos = sumaPrestamos + prestamos;
                    sumaCapital = sumaCapital + capital;
                }
            }
            int gastospap = (depts.size()) * 25;
            Deducciones d;
            for (int x = 0; x < deptsd.size(); x++) {
                d = deptsd.get(x);
                if (obtenerMes(d.getFecha()).equals(jMes.getSelectedItem().toString()) && obtenerAnio(d.getFecha()) == Integer.parseInt(jAñio.getText())) {
                    float deducciones = deptsd.get(x).getDeduccion();
                    sumaDeducciones = sumaDeducciones + deducciones;
                    String idPrestamo = deptsd.get(x).getIdPrestamo();
                    pres = service.findByIdPrestamos(idPrestamo);
                    float capitalded = pres.getAbonocapital();
                    float interesded = pres.getInteresganado();
                    sumaCapitalded = sumaCapitalded + capitalded;
                    sumaInteresded = sumaInteresded + interesded;
                }

            }
            jTable1.setValueAt(formatNumber(sumaPrestamos), 0, 0);
            jTable1.setValueAt(formatNumber(sumaDeducciones), 0, 2);
            jTable1.setValueAt(formatNumber(sumaCapital), 0, 1);
            jTable1.setValueAt(formatNumber(sumaCapitalded + Capitalex), 0, 3);
            jTable1.setValueAt(formatNumber(sumaInteresded + Interesex), 0, 4);
            jTable1.setValueAt(formatNumber(gastospap), 0, 5);

        } catch (SQLException ex) {
            Logger.getLogger(BalanceGeneral.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public String obtenerMes(String f) {
        try {
            SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
            String fecha = f;
            Date date = format.parse(fecha);
            String formato = "MM";
            SimpleDateFormat dateFormat = new SimpleDateFormat(formato);
            int mes = Integer.parseInt(dateFormat.format(date));
            String meses[] = {"Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre",
                "octubre", "Noviembre", "Diciembre"};
            return meses[mes - 1];
        } catch (ParseException ex) {
            Logger.getLogger(registrarPrestamo.class.getName()).log(Level.SEVERE, null, ex);
        }
        return "";
    }

    public int obtenerAnio(String f) {
        try {
            SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
            String fecha = f;
            Date date = format.parse(fecha);
            String formato = "yyyy";
            SimpleDateFormat dateFormat = new SimpleDateFormat(formato);
            return Integer.parseInt(dateFormat.format(date));
        } catch (ParseException ex) {
            Logger.getLogger(registrarPrestamo.class.getName()).log(Level.SEVERE, null, ex);
        }
        return 0;
    }

}
